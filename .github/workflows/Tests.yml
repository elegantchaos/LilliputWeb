# --------------------------------------------------------------------------------
# This workflow was automatically generated by Action Status 2.0.5 (461).
# (see https://actionstatus.elegantchaos.com for more details)
# --------------------------------------------------------------------------------

name: Tests

on: [push, pull_request]

jobs:

    macOS-swift-53:
        name: macOS (Swift 5.3)
        runs-on: macos-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Xcode Version
          run: |
            ls -d /Applications/Xcode*
            sudo xcode-select -s /Applications/Xcode_12.3.app
            xcodebuild -version
            swift --version
        - name: Swift Version
          run: swift --version
        - name: Build (Release)
          run: swift build -c release
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs


    macOS-swift-nightly:
        name: macOS (Swift Development Nightly)
        env:
            TOOLCHAINS: swift
        runs-on: macos-11
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Install Toolchain
          run: |
            branch="development"
            wget --quiet https://swift.org/builds/$branch/xcode/latest-build.yml
            grep "download:" < latest-build.yml > filtered.yml
            sed -e 's/-osx.pkg//g' filtered.yml > stripped.yml
            sed -e 's/:[^:\/\/]/YML="/g;s/$/"/g;s/ *=/=/g' stripped.yml > snapshot.sh
            source snapshot.sh
            echo "Installing Toolchain: $downloadYML"
            wget --quiet https://swift.org/builds/$branch/xcode/$downloadYML/$downloadYML-osx.pkg
            sudo installer -pkg $downloadYML-osx.pkg -target /
            ln -s "/Library/Developer/Toolchains/$downloadYML.xctoolchain/usr/bin" swift-latest
            ls -d /Applications/Xcode*
            sudo xcode-select -s /Applications/Xcode_13.0.app
            swift --version
        - name: Xcode Version
          run: |
            xcodebuild -version
            xcrun swift --version
        - name: Swift Version
          run: swift --version
        - name: Build (Release)
          run: export PATH="swift-latest:$PATH"; swift build -c release
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs


    linux-swift-53:
        name: Linux (Swift 5.3)
        runs-on: ubuntu-18.04
        container: swift:5.3.3-bionic
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Swift Version
          run: swift --version
        - name: Build (Release)
          run: swift build -c release
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs


    linux-swift-nightly:
        name: Linux (Swift Development Nightly)
        runs-on: ubuntu-18.04
        container: swiftlang/swift:nightly
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Make Logs Directory
          run: mkdir logs
        - name: Swift Version
          run: swift --version
        - name: Build (Release)
          run: swift build -c release
        - name: Upload Logs
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: logs

